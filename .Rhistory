modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug="step")
clearCache()
clearCache(spadesCBMSim)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug="step")
spadesCBMout <- spades(spadesCBMSim,debug="annual")
events()
events(sim)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
clearCache(spadesCBMSim)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
head(sim$cbmPools)
sim$cbmPools
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
clearCache(spadesCBMSim)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
clearCache(spadesCBMSim)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
clearCache(spadesCBMSim)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
clearCache(spadesCBMSim)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
sim$cPools
F
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
sim$cbmPools
events(sim)
library(SpaDES.core)
moduleDir <- file.path("C:/Celine/GitHub/spadesCBM")
inputDir <- file.path("C:/Celine/GitHub/data/12_Spades_run") %>% reproducible::checkPath(create = TRUE)
outputDir <- file.path("C:/Celine/SpaDEScacheOutputs/outputs")
cacheDir <- file.path("C:/Celine/SpaDEScacheOutputs/cache")
times <- list(start = 1990.00, end = 1999.00)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
spadesCBMcore = list(.useCache = c(".inputObjects", "init")),
spadesCBMinputs = list(.useCache = c(".inputObjects")),
spadesCBMdefaults = list(.useCache = c(".inputObjects"))
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("spadesCBM")
objects <- list(
dbPath = file.path(inputDir,"cbm_defaults","cbm_defaults.db"),
sqlDir = file.path(inputDir,"cbm_defaults")
)
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
spadesCBMSim <- simInit(times = times, params = parameters,
modules = modules,
objects = objects, paths = paths)
spadesCBMout <- spades(spadesCBMSim,debug=TRUE)
cbmPools
cbmPools
C
